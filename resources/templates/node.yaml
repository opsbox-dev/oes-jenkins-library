
variables:
  DOCKER_BUILDKIT: 1
  APP_VERSION: 0.1.0-SNAPSHOT

stages:
  - name: prepare env
    steps:
      - use: script
        code: |
          echo -n "${DOCKER_AUTH_PSW}" | docker login -u ${DOCKER_AUTH_USR} --password-stdin ${DOCKER_REGISTRY}

          echo "--//INFO: Create app version..."
          _app_version=$(echo "${APP_VERSION}" | sed 's/-SNAPSHOT//g')-$(date '+%Y%m%d%H%M%S').`git rev-parse --short HEAD`
          _app_name=$(echo "$JOB_NAME" | sed 's/%2F/-/g' | awk -F/ '{print $(NF-1)}')

          echo "IMAGE_VERSION=${_app_name}-v${_app_version}" >> ${OPSBOX_ENV}

          # get git commit log
          GIT_COMMIT_LOG=$(git show --pretty=%s%b -s| head -n 1)
          echo "GIT_COMMIT_LOG=${GIT_COMMIT_LOG}" >> ${OPSBOX_ENV}

  - name: build image
    except:
      GIT_COMMIT_LOG:
        - \[ci skip\].*
    steps:
      - use: script
        code: |
          docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_VERSION} . -f .opsbox/package/Dockerfile
          docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_VERSION}

    after-steps:
      - use: script
        code: |
          docker logout ${DOCKER_REGISTRY}

  - name: deploy test
    except:
      GIT_COMMIT_LOG:
        - \[ci skip\].*
      BRANCH_NAME:
        - master
    steps:
      - use: script
        code: |
          echo "--//info: start deploy test "

          helm upgrade --install ${APP_NAME} nginx \
            --repo=${HELM_CHARTS_URL} \
            --namespace=platform-test --create-namespace \
            -f .opsbox/deploy/values/test.yaml \
            --set fullnameOverride=${APP_NAME} \
            --set image.repository=${DOCKER_REGISTRY}/${DOCKER_IMAGE} \
            --set image.tag=${IMAGE_VERSION}
